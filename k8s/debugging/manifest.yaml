apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: backend
  annotations:
    openshift.io/node-selector: "planet=tatooine"
---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: frontend
  name: frontend
  namespace: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  strategy: {}
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - image: ghcr.io/camptocamp/course_docker_frontend:latset
        name: course-docker-frontend-cnvvb
        resources: {}
        env:
          - name: BACKEND_HOST
            value: backend.backend.svc.cluster.local
          - name: BACKEND_PORT
            value: '80'
        ports:
          - name: http
            containerPort: 8080
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  creationTimestamp: null
  labels:
    app: frontend
  name: frontend
  namespace: frontend
spec:
  tls:
    termination: edge
  to:
    kind: ""
    name: frontend
    weight: null
status: {}
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-from-ingress
  namespace: backend
spec:
  podSelector: {}
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              policy-group.network.openshift.io/ingress: ""
  policyTypes:
    - Ingress

---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-same-namespace
  namespace: backend
spec:
  podSelector: {}
  ingress:
  - from:
    - podSelector: {}
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-from-frontend
  namespace: backend

spec:
  podSelector: {}
  ingress:
    - from:
        - podSelector: {}
          namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: frontoffice
  policyTypes:
    - Ingress
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: frontend
  name: frontend
  namespace: frontend
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: frontend
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: backend
  name: backend
  namespace: backend
spec:
  replicas: 0
  selector:
    matchLabels:
      app: backend
  strategy: {}
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - image: ghcr.io/camptocamp/course_docker_backend:python
        name: course-docker-backend-qthcz
        resources: {}
        ports:
          - containerPort: 8080
            name: http
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: backend
  name: backend
  namespace: backend
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: backend
status:
  loadBalancer: {}
